import React, { useState, useEffect } from 'react';
import axios from 'axios';
import '../styles/Profile.css';

const Profile = ({ token, currentUser }) => {
  const [user, setUser] = useState(currentUser || null);
  const [name, setName] = useState((currentUser && currentUser.name) || '');
  const [email, setEmail] = useState((currentUser && currentUser.email) || '');
  const [password, setPassword] = useState('');
  const [message, setMessage] = useState('');
  const [avatar, setAvatar] = useState(null);
  const [avatarPreview, setAvatarPreview] = useState('');

  useEffect(() => {
    const fetchProfile = async () => {
      try {
        const response = await axios.get('http://localhost:5000/api/profile', {
          headers: { Authorization: `Bearer ${token}` }
        });
        setUser(response.data);
        setName(response.data.name || '');
        setEmail(response.data.email || '');
      } catch (error) {
        setMessage('Lỗi tải thông tin');
      }
    };
    // Nếu không có currentUser prop, fetch từ server
    if (token && !currentUser) fetchProfile();
  }, [token, currentUser]);

  const handleAvatarChange = (e) => {
    const file = e.target.files[0];
    if (file) {
      setAvatar(file);
      setAvatarPreview(URL.createObjectURL(file));
    }
  };

  const handleAvatarUpload = async () => {
    if (!avatar) return;

    const formData = new FormData();
    formData.append('avatar', avatar);

    try {
      const response = await axios.post(
        'http://localhost:5000/api/profile/upload-avatar',
        formData,
        {
          headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'multipart/form-data',
          }
        }
      );
      setMessage('Avatar uploaded successfully');
      setUser(prev => ({ ...prev, avatar: response.data.avatarUrl }));
    } catch (error) {
      setMessage('Failed to upload avatar');
    }
  };

  const handleUpdate = async (e) => {
    e.preventDefault();
    setMessage('');
    try {
      const payload = { name, email };
      if (password) payload.password = password;
      const response = await axios.put(
        'http://localhost:5000/api/profile',
        payload,
        { headers: { Authorization: `Bearer ${token}` } }
      );
      setMessage('Cập nhật thành công');
      setPassword('');
      
      if (avatar) {
        await handleAvatarUpload();
      }
    } catch (error) {
      setMessage('Lỗi cập nhật');
    }
  };

  if (!token) return <p className="profile-message">Vui lòng đăng nhập</p>;

  return (
    <div className="profile-wrapper" style={{ display: 'flex', justifyContent: 'center' }}>
      <div className="profile-box" style={{ width: 420, padding: 24, borderRadius: 8, boxShadow: '0 6px 18px rgba(0,0,0,0.08)', background: '#fff' }}>
        <h2 className="profile-title" style={{ textAlign: 'center', marginBottom: 10 }}>Thông Tin Cá Nhân</h2>
        {!user ? (
          <p className="profile-message">Đang tải...</p>
        ) : (
          <>
            <div className="avatar-section" style={{ marginBottom: 20, textAlign: 'center' }}>
              <div style={{ marginBottom: 10 }}>
                {avatarPreview || user.avatar ? (
                  <img
                    src={avatarPreview || user.avatar}
                    alt="Avatar"
                    style={{
                      width: 100,
                      height: 100,
                      borderRadius: '50%',
                      objectFit: 'cover',
                      border: '2px solid #ddd'
                    }}
                  />
                ) : (
                  <div style={{
                    width: 100,
                    height: 100,
                    borderRadius: '50%',
                    backgroundColor: '#f0f0f0',
                    margin: '0 auto',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center'
                  }}>
                    <span style={{ fontSize: 40, color: '#666' }}>
                      {user.name ? user.name[0].toUpperCase() : '?'}
                    </span>
                  </div>
                )}
              </div>
              <input
                type="file"
                id="avatar-upload"
                accept="image/*"
                onChange={handleAvatarChange}
                style={{ display: 'none' }}
              />
              <label
                htmlFor="avatar-upload"
                style={{
                  display: 'inline-block',
                  padding: '8px 16px',
                  backgroundColor: '#f0f0f0',
                  borderRadius: 4,
                  cursor: 'pointer',
                  marginTop: 10
                }}
              >
                Chọn ảnh đại diện
              </label>
            </div>
            
            <form onSubmit={handleUpdate} className="profile-form">
              <div className="input-group" style={{ marginBottom: 12 }}>
                <label style={{ display: 'block', marginBottom: 6 }}>Tên</label>
                <input
                  type="text"
                  value={name}
                  onChange={(e) => setName(e.target.value)}
                  className="profile-input"
                  style={{ width: '100%', padding: '10px 12px', borderRadius: 6, border: '1px solid #ddd' }}
                />
              </div>
              <div className="input-group" style={{ marginBottom: 12 }}>
                <label style={{ display: 'block', marginBottom: 6 }}>Email</label>
                <input
                  type="email"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  className="profile-input"
                  style={{ width: '100%', padding: '10px 12px', borderRadius: 6, border: '1px solid #ddd' }}
                />
              </div>
              <div className="input-group" style={{ marginBottom: 12 }}>
                <label style={{ display: 'block', marginBottom: 6 }}>Mật khẩu mới (tùy chọn)</label>
                <input
                  type="password"
                  value={password}
                  onChange={(e) => setPassword(e.target.value)}
                  placeholder="Để trống nếu không đổi"
                  className="profile-input"
                  style={{ width: '100%', padding: '10px 12px', borderRadius: 6, border: '1px solid #ddd' }}
                />
              </div>
              <div style={{ display: 'flex', gap: 10, justifyContent: 'space-between', alignItems: 'center' }}>
                <button type="submit" className="btn primary" style={{ padding: '10px 18px', borderRadius: 6 }}>
                  Cập Nhật
                </button>
              </div>
              {message && (
                <p className="profile-message" style={{ marginTop: 12, textAlign: 'center', color: message.includes('thành công') ? 'green' : 'red' }}>
                  {message}
                </p>
              )}
            </form>
          </>
        )}
      </div>
    </div>
  );
};

export default Profile;